# This is a basic workflow to help you get started with Actions

name: Source Repository

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events
  push:
    branches: [ "main","dev" ]
  pull_request:
    branches: [ "main","dev" ]

  # Allows you to run this workflow manually from the Actions tab
  #workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Get the Event Name and commit message/title and store in env variable
    - name: Get Repository Event name and store in env variable
      id: check_event
      run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            title="${{ github.event.head_commit.message }}"
            orginalEventName="${{ github.event_name }}"
            eventName="$(echo ${orginalEventName:0:1} | tr '[:lower:]' '[:upper:]')${orginalEventName:1}"
          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            title="${{ github.event.pull_request.title }}"
            orginalEventName="${{ github.event_name }}"
            eventName="$(echo ${orginalEventName:0:1} | tr '[:lower:]' '[:upper:]')${orginalEventName:1}"
          else
            echo "This event is not supported."
            exit 1
          fi
          echo "Event Name: $eventName"
          echo "EVENT_NAME=$eventName" >> $GITHUB_ENV
          echo "Event Title: $title"
          echo "EVENT_TITLE_DESC=$title" >> $GITHUB_ENV
          
   # Get the Repo Name and store in env variable
    - name: Get Repository Name and store in env variable
      run: |
          repoName=$(echo "${{ github.repository }}" | cut -d'/' -f2)
          echo "REPOSITORY_NAME=$repoName" >> $GITHUB_ENV
          echo "Repo Name: $repoName"
  
  # Get the current branch name and store in env var
    - name: Get current branch and store in env variable
      run: |
          branch_name="${GITHUB_REF##*/}"
          echo "CRR_BR_NAME=$branch_name" >> $GITHUB_ENV
          echo "Current branch: $branch_name"
          
      # Send the Push or Pull event of current source repo branch to trigger the workflow of specific branch in remote repository 
    - name: Send Repository Event Workflow Dispatch
      env: 
          GITHUB_TOKEN: ${{ secrets.REPO_DISPATCH_TOKEN }}
      run: |
          curl -X POST \
          -H "Authorization: token $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          -d '{"event_type":"${{env.EVENT_NAME}}-${{env.REPOSITORY_NAME}}-${{env.CRR_BR_NAME}}-${{env.EVENT_TITLE_DESC}}","client_payload":{}}' \
          https://api.github.com/repos/rsenthilr/TestTargetRepo/dispatches
